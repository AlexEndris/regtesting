@using RegTesting.Contracts
@using RegTesting.Contracts.Domain
@using RegTesting.Mvc
@using RegTesting.Mvc.Models
@{
	ViewBag.Title = "Testing - RegTesting";

	IList<TestsystemModel> lstTestsysteme = ((IList<TestsystemModel>)ViewBag.LstTestsystems);
	IList<TestsuiteModel> lstTestsuites = ((IList<TestsuiteModel>)ViewBag.LstTestsuites);

	TestsystemModel objCurrentTestsystem = (TestsystemModel)ViewBag.CurrentTestsystem;
	TestsuiteModel objCurrentTestsuite = (TestsuiteModel)ViewBag.CurrentTestsuite;

	TestsystemModel objDev = lstTestsysteme.FirstOrDefault(t => t.Name == "dev");
	TestsystemModel objBeta = lstTestsysteme.FirstOrDefault(t => t.Name == "beta");
	TestsystemModel objGamma = lstTestsysteme.FirstOrDefault(t => t.Name == "gamma");
	IList<TestsystemModel> lstPinnedBranches = new List<TestsystemModel>();
	lstPinnedBranches.Add(objDev);
	lstPinnedBranches.Add(objBeta);
	lstPinnedBranches.Add(objGamma);
	IList<TestsystemModel> lstCurrentBranches = lstTestsysteme.Where(t => t.Name.StartsWith("dev-bt") && DateTime.Now - t.LastUpdated < new TimeSpan(7, 0, 0, 0)).ToList();
	IList<TestsystemModel> lstOldBranches = lstTestsysteme.Where(t => t.Name.StartsWith("dev-bt") && DateTime.Now - t.LastUpdated >= new TimeSpan(7, 0, 0, 0)).ToList();
	IList<TestsystemModel> lstMyLocalBranches = lstTestsysteme.Where(t => t.Name.StartsWith("local") && t.Name.EndsWith(User.Identity.GetLogin().ToLower())).ToList();
	IList<TestsystemModel> lstOtherLocalBranches = lstTestsysteme.Where(t => t.Name.StartsWith("local") && !t.Name.EndsWith(User.Identity.GetLogin())).ToList();

	IList<TestsuiteModel> lstPinnedTestsuites = new List<TestsuiteModel>();
	TestsuiteModel thorMainTestsuite = lstTestsuites.FirstOrDefault(t => t.Name == RegtestingMvcConfiguration.ThorDefaulttestsuite);
	TestsuiteModel sodaMainTestsuite = lstTestsuites.FirstOrDefault(t => t.Name == RegtestingMvcConfiguration.SodaDefaulttestsuite);
	lstPinnedTestsuites.Add(sodaMainTestsuite);
	lstPinnedTestsuites.Add(thorMainTestsuite);
	IList<TestsuiteModel> lstNormalTestsuites = lstTestsuites.Where(t => !t.Name.StartsWith("Local ") && !lstPinnedTestsuites.Contains(t)).ToList();
	IList<TestsuiteModel> lstLocalTestsuites = lstTestsuites.Where(t => t.Name.StartsWith("Local ") && !lstPinnedTestsuites.Contains(t)).ToList();

	lstLocalTestsuites = lstLocalTestsuites.OrderByDescending(x => DateTime.Parse(x.Name.Substring(6))).ToList();
}

<div class="navbar navbar-default">
			 <a class="navbar-brand">Testing</a>
			<ul class="nav navbar-nav">
				<li><a href="@Url.Action( "Index", "Testing", new {})">Testsuite</a></li>
				<li><a href="@Url.Action( "Errorlog", "Testing", new {})">Errorlog</a></li>
				<li><a href="@Url.Action("Resulthistory", "Testing", new {})">Resulthistory</a></li>
				<li class="dropdown">
					<a href="#" class="dropdown-toggle" data-toggle="dropdown">
						<b>Current Branch: </b>@objCurrentTestsystem.Name
						<b class="caret"></b>
					</a>
					<ul class="dropdown-menu">
						@foreach (TestsystemModel objItem in lstPinnedBranches)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsystem = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>
						<li role="presentation" class="dropdown-header">Current Branches</li>
						@foreach (TestsystemModel objItem in lstCurrentBranches)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsystem = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>
						<li role="presentation" class="dropdown-header">My local branches</li>
						@foreach (TestsystemModel objItem in lstMyLocalBranches)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsystem = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>
						<li role="presentation" class="dropdown-header">Branches with tests older as 7 days</li>
						@foreach (TestsystemModel objItem in lstOldBranches)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsystem = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>
						<li role="presentation" class="dropdown-header">Other local branches</li>
						@foreach (TestsystemModel objItem in lstOtherLocalBranches)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsystem = objItem.ID })">@objItem.Name</a></li>
						}
					</ul>
				</li>
				<li class="dropdown">
					<a href="#" class="dropdown-toggle" data-toggle="dropdown">
						<b>Current Testsuite: </b>@objCurrentTestsuite.Name
						<b class="caret"></b>
					</a>
					<ul class="dropdown-menu">
						@foreach (TestsuiteModel objItem in lstPinnedTestsuites)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsuite = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>

						@foreach (TestsuiteModel objItem in lstNormalTestsuites)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsuite = objItem.ID })">@objItem.Name</a></li>
						}
						<li role="presentation" class="divider"></li>
						<li role="presentation" class="dropdown-header">Testsuites just for this branch</li>
						@foreach (TestsuiteModel objItem in lstLocalTestsuites)
						{
							<li><a tabindex="-1" href="@Url.Action("Index", "Testing", new { testsuite = objItem.ID })">@objItem.Name</a></li>
						}
					</ul>
				  </li>
			</ul>
</div>