@using RegTesting.Mvc
@using RegTesting.Mvc.Models
@{
	ViewBag.Title = "Testing - RegTesting";
	TestsuiteModel objCurrentTestsuite = (TestsuiteModel)ViewBag.CurrentTestsuite;
	TestsystemModel objCurrentTestsystem = (TestsystemModel)ViewBag.CurrentTestsystem;
	
	string strMessage = ViewBag.Message;
}

@Html.Partial("PartialTestingMenu")

<div class="page-header">
	<h1>@objCurrentTestsystem.Name <small>@objCurrentTestsuite.Name</small></h1>
	@objCurrentTestsystem.Description<br>
	<b>@objCurrentTestsuite.Description</b>
</div>
<div class="testing-hero-unit">
	<div class="btn-group">
		<button class="btn btn-default" id="addallbtn"><i class="glyphicon glyphicon-play"></i> Start Testsuite</button>
		<button class="btn btn-default" id="redoerrorbtn"><i class="glyphicon glyphicon-repeat"></i> Repeat failed tests</button>
		@if (RegtestingMvcConfiguration.Testmanager.Contains(User.Identity.GetLogin(), StringComparer.InvariantCultureIgnoreCase))
		{
			<a href="@Url.Action("Edit", "Testsystem", new { id = objCurrentTestsystem.ID })" class="btn btn-default"><i class="glyphicon glyphicon-pencil"></i> Edit info</a>
		}
	</div>

	<div class="row">
		<div class="col-md-3">
			<h4>Browser:</h4>
			@foreach (BrowserModel objItem in objCurrentTestsuite.Browsers)
			{
				<span class="label label-default">@objItem.Name</span>
			}
		</div>
		<div class="col-md-3">
			<h4>Languages:</h4>
			@foreach (LanguageModel objItem in objCurrentTestsuite.Languages)
			{
				<span class="label label-default">@objItem.Name</span>
			}
		</div>
	</div>
</div>
<div id="testJobsBlock">
</div>

<div id="messageForBranch">
</div>


<div class="alert alert-success" id="messageEverythingGreen" style="display:none">
	<h4>Good job! Every test was successful!</h4>
</div>

<div class="panel-group" id="divImportantResults">
</div>

<div id="divSuccess" style="display:none">
	<hr />
	<a class="" id="btnShowSuccessResults">Show successful tests</a>
	<div class="panel-group" id="divSuccessResults" style="display:none">
	</div>
</div>

<div id="divPending" style="display:none">
	<hr />
	<a class="" id="btnShowWaitingResults">Show pending tests</a>
	<div class="panel-group" id="divWaitingResults" style="display: none">
		@foreach (TestcaseModel objTestcase in objCurrentTestsuite.Testcases)
		{
			<div class="panel panel-default" id="@("resultGroup" + objTestcase.ID)">
				<div class="panel-heading" data-toggle="collapse" data-target="@("#collapse" + objTestcase.ID)">
					<span>
						@objTestcase.Name
						<span class="pull-right">
							<span id="@("res" + objTestcase.ID)" class="testtabletestcase ">
								No testresults found!
							</span>
							<span class="glyphicon glyphicon-chevron-down"></span>
						</span>
					</span>
				</div>
				<div id="@("collapse" + objTestcase.ID)" class="panel-collapse collapse" data-tc="@objTestcase.ID">
					<div class="panel-body">
						<div id="@("rowdetails" + objTestcase.ID)">
							<div class="alert alert-warning"><h4>Loading data ...</h4></div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>
	<br /><br />

	<div id="modalMessageDialog" class="modal fade">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h4 id="modalMessage" class="modal-title">Starting tests...</h4>
				</div>
			</div><!-- /.modal-content -->
		</div><!-- /.modal-dialog -->
	</div><!-- /.modal -->
	<!-- Scripts for Testing index site:-->
	<script type="text/javascript">
		$(function () {
			$("#btnShowSuccessResults").click(function () {
				$("#divSuccessResults").toggle();
			});

			$("#btnShowWaitingResults").click(function () {
				$("#divWaitingResults").toggle();
			});

			/*set actions of buttons:*/
			$("#addallbtn").click(function () {
				$.get('@Url.Action("RunAllTests")' + '?testsystem=' + @objCurrentTestsystem.ID + '&testsuite=@objCurrentTestsuite.ID', {},
					function (data) {
						SetNewResults(data);
					});
				ShowModalConfirm('Start testsuite ...');
			});
			$("#redoerrorbtn").click(function () {
				$.get('@Url.Action("RedoErrorTests")' + '?testsystem=' + @objCurrentTestsystem.ID + '&testsuite=@objCurrentTestsuite.ID', {},
				function (data) {
					SetNewResults(data);
				});
				ShowModalConfirm('Repeat failed tests ...');
			});

			$('.panel-collapse').on('show.bs.collapse', function () {
				var testcase = $(this).attr("data-tc");
				$.get('@Url.Action("GetTestcaseDetails")' + '?testsystem=@objCurrentTestsystem.ID' + '&testsuite=@objCurrentTestsuite.ID' + '&testcase=' + testcase, {},
					function (view) {
						$("#rowdetails" + testcase).html(view);
					})
					.error(function () {
						$("#rowdetails" + testcase).text("Error while asking for details!");
					});
			});
			/*refreshing results:*/
			/*now ...*/
			RefreshResults();
			/*and periodic ...*/
			setInterval(function () {
				RefreshResults();
			}, 30000);

		});

		var refreshResultsAnswer = 1;
		var resultsSince = 0;
		var resultStates = {
			0: "default",
			2: "default",
			3: "default",
			4: "info",
			5: "success",
			8: "warning",
			9: "danger",
			10: "danger",
			14: "default",
			15: "default",
			18: "default"
		};

		function ShowModalConfirm(text) {
			$('#modalMessage').html(text);
			$('#modalMessageDialog').modal('show');
			setTimeout(function () {
				$('#modalMessageDialog').modal('hide');
			}, 1500);
		}



		function RefreshResults() {

			if (refreshResultsAnswer == 1) {
				refreshResultsAnswer = 0;
				$.get('@Url.Action("RefreshResults")' + '?testsystem=@objCurrentTestsystem.ID' + '&testsuite=@objCurrentTestsuite.ID' + '&resultsSince=' + resultsSince, {},
						function (answer) {
							refreshResultsAnswer = 1;
							resultsSince = answer.ResultsUntil;
							SetNewResults(answer.Results);
						})
						.error(function () {
							refreshResultsAnswer = 1;
						});
			}
		}

		function RefreshTestJobs() {
			$.get('@Url.Action("RefreshTestJobs")' + '?testsystem=@objCurrentTestsystem.ID', {},
					function (view) {
						$("div#testJobsBlock").html(view);
						setTimeout(function () {
							RefreshTestJobs();
						}, 20000);
					});
		}
		RefreshTestJobs();

		function RefreshMessage() {
			$.get('@Url.Action("RefreshMessage")' + '?testsystem=@objCurrentTestsystem.ID', {},
					function (view) {
						$("div#messageForBranch").html(view);
						setTimeout(function () {
							RefreshMessage();
						}, 60000);
					});
		}
		RefreshMessage();

		/*set new results:*/
		function SetNewResults(results) {

			var resultCategories = {
				0: "Success",
				1: "Waiting",
				2: "Important",
			};


			for (var i = 0; i < results.length; i++) {
				var groupedResult = results[i];
				var elementId = "#res" + groupedResult.Testcase;
				var htmlToAdd = "";
				var resultCategory = 0;

				for (var j = 0; j < groupedResult.GroupedResultParts.length; j++) {
					htmlToAdd = htmlToAdd + "<span class=\"label label-" + resultStates[groupedResult.GroupedResultParts[j].ResultCode] + "\">" + groupedResult.GroupedResultParts[j].ResultLabel + "</span>";
					if (groupedResult.GroupedResultParts[j].ResultCode == 2 || groupedResult.GroupedResultParts[j].ResultCode == 8 || groupedResult.GroupedResultParts[j].ResultCode == 9 || groupedResult.GroupedResultParts[j].ResultCode == 10) {
						if (resultCategory < 2)
							resultCategory = 2;
					} else if (groupedResult.GroupedResultParts[j].ResultCode == 14 || groupedResult.GroupedResultParts[j].ResultCode == 15 || groupedResult.GroupedResultParts[j].ResultCode == 18) {
						if (resultCategory < 1)
							resultCategory = 1;
					}
				}

				$(elementId).html(htmlToAdd);

				var resultGroupOfTestcase = "#resultGroup" + groupedResult.Testcase;
				var element = $(resultGroupOfTestcase).detach();
				var tableToAppend = "#div" + resultCategories[resultCategory] + "Results";
				$(tableToAppend).append(element);

				var importantResultsCount = $("#divImportantResults .panel").length;
				var successResultsCount = $("#divSuccessResults .panel").length;
				var waitingResultsCount = $("#divWaitingResults .panel").length;

				if (importantResultsCount == 0) {
					$("#divImportantResults").hide();
				} else {
					$("#divImportantResults").show();
				}

				if (importantResultsCount == 0 && waitingResultsCount == 0) {
					$("#messageEverythingGreen").show();
				} else {
					$("#messageEverythingGreen").hide();
				}

				if (waitingResultsCount > 0) {
					$("#divPending").show();
					$("#btnShowWaitingResults").text("Show pending tests ( " + waitingResultsCount + " )");
				} else {
					$("#divPending").hide();
				}

				if (successResultsCount > 0) {
					$("#divSuccess").show();
					$("#btnShowSuccessResults").text("Show succeeded tests ( " + successResultsCount + " )");
				} else {
					$("#divSuccess").hide();
				}





			}
		}


	</script>



