@using RegTesting.Contracts.Enums
@using RegTesting.Mvc.Models
@model IEnumerable<TestWorkerModel>

	@if (Model.Any())
	{
		<table class="table table-condensed">
			<tr>
				<th>Virtual Machine Name</th>
				<th>Browsersupport</th>
				<th>Test</th>
				<th>Since</th>
				<th>Actions</th>
			</tr>

			@foreach (TestWorkerModel objTestWorker in Model)
			{
				<tr>
					<td><span class="@("label label-" + StatusHelper.GetTestWorkerStatusString(objTestWorker.State))">@objTestWorker.Name</span></td>

					<td>
						@foreach (string browser in objTestWorker.SupportedBrowsers)
						{
							<text>@browser </text>
						}

				</td>
				<td>
					@if (objTestWorker.State == TestWorkerStatus.Rebooting)
					{
						<b>*** Rebooting... ***</b>
					}
					else
					{
						@((objTestWorker.WorkItemTestcaseName != null) ? objTestWorker.WorkItemTestcaseName + " " + objTestWorker.WorkItemBrowserName + " (" + objTestWorker.WorkItemTestsystemName + "/" +  objTestWorker.WorkItemLanguageLanguagecode  +")": "Idle")
					}
				</td>
				<td>@objTestWorker.TestruntimeString</td>
				<td>
					<div class="btn-group">
@*
						<a class="btn btn-default btn-xs" href="@Url.Action("PauseWorker", "Status", new {node = objTestWorker.Name})"><i class="glyphicon glyphicon-pause"></i></a>
*@
						@if ((objTestWorker.State != TestWorkerStatus.Rebooting && !objTestWorker.Name.Contains("mac")))
						{
							<a class="btn btn-default btn-xs" href="@Url.Action("RebootWorker", "Status", new { node = objTestWorker.Name })"><i class="glyphicon glyphicon-repeat"></i> Reboot</a>
						}
					</div>

				</td>
		</tr>
			}

		</table>


	}
	else
	{
		<div class="alert alert-info">There are no workers available. Start some nodes to change this!</div>
	}
